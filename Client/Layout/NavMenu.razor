@inject Client.Services.IAuthService Auth
@inject NavigationManager Nav

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="d-flex align-items-center ms-auto">
            @if (!string.IsNullOrEmpty(Auth?.Token))
            {
                <span class="me-2 text-light">Hello, @Auth.Username</span>
                <button class="btn btn-link text-decoration-none text-light" @onclick="Logout">Logout</button>
            }
            else
            {
                <NavLink class="nav-link text-light" href="login">Login</NavLink>
            }
        </div>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tasks">
                <span class="bi bi-list-task-nav-menu" aria-hidden="true"></span> My Tasks
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="manager/tasks">
                <span class="bi bi-people-fill-nav-menu" aria-hidden="true"></span> Manager Tasks
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin-dashboard">
                <span class="bi bi-gear-fill-nav-menu" aria-hidden="true"></span> Admin
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    
    protected override void OnInitialized()
    {
        if (Auth != null)
        {
            Auth.AuthenticationStateChanged += StateHasChanged;
        }
    }

    public void Dispose()
    {
        if (Auth != null)
        {
            Auth.AuthenticationStateChanged -= StateHasChanged;
        }
    }

    private async Task Logout()
    {
        if (Auth != null)
        {
            await Auth.LogoutAsync();
            Nav.NavigateTo("/login");
        }
    }
}
